(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     15425,        361]
NotebookOptionsPosition[     13459,        322]
NotebookOutlinePosition[     13797,        337]
CellTagsIndexPosition[     13754,        334]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Programming exercise: Posterior probabilities", "Section",
 CellChangeTimes->{{3.584990522242609*^9, 3.584990533174054*^9}, {
  3.585057066962536*^9, 
  3.585057079454668*^9}},ExpressionUUID->"8fcf5dac-2259-4a7b-a3f7-\
f6963abfe94a"],

Cell[TextData[{
 "Just as we did ",
 StyleBox["dicePosterior",
  FontWeight->"Bold"],
 " right after ",
 StyleBox["diceSample",
  FontWeight->"Bold"],
 ", now we\[CloseCurlyQuote]ll be doing ",
 StyleBox["sitePosterior",
  FontWeight->"Bold"],
 " after ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 ".  If you haven\[CloseCurlyQuote]t done ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 ", go do it!"
}], "Text",
 CellChangeTimes->{{3.620686225038673*^9, 3.620686249061878*^9}, {
  3.620688311558206*^9, 
  3.62068831754191*^9}},ExpressionUUID->"6aef085c-1a1a-4bc4-a7b1-\
7d3cfa0a8372"],

Cell["\<\
The experimental setup is the same in this as in siteSample -- a bag \
containing two types of sequences with different probabilities of seeing each \
base. Someone selects a sequence from the bag at random, records the bases \
present, returns it to the bag, and repeats the process. Here, you will write \
code that calculates the posterior probability of each sequence type for each \
draw, given the observed bases for that draw, the probability distribution on \
bases given the sequence type, and the prior probabilities of the two \
sequence types.\
\>", "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
  3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
  3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
  3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
  3.585057372165312*^9}, {3.5850574181094837`*^9, 3.5850574387199717`*^9}, {
  3.620686284299654*^9, 3.620686311602668*^9}, {3.620688323493874*^9, 
  3.620688331453307*^9}, {3.620689358964869*^9, 
  3.6206894337850037`*^9}},ExpressionUUID->"5ae5015d-4688-4baf-a771-\
85b99a4e54fd"],

Cell[TextData[{
 StyleBox["Before starting to do anything in Mathematica, sit down with a pen \
and paper and write the formula for the posterior probability of each \
sequence type as a function of its prior probability, the probability \
distribution on bases for each sequence type, and the bases actually observed \
when a die of that type is rolled.  ",
  FontWeight->"Bold"],
 "Since there are only two possible sequence types, the posteriors of these \
two types must sum to one. To get the posteriors, you will use Bayes rule. \
This will give you something of the form x/(x + y)."
}], "Text",
 CellChangeTimes->{{3.585057445838188*^9, 3.5850575189893627`*^9}, {
  3.585057549921026*^9, 3.585057905317073*^9}, {3.585058099590743*^9, 
  3.5850581163975477`*^9}, {3.585770797174333*^9, 3.585770798963327*^9}, {
  3.6191826294213343`*^9, 3.6191826304159927`*^9}, {3.619182684108712*^9, 
  3.6191827615152082`*^9}, {3.619182968667404*^9, 3.619183204769086*^9}, {
  3.6206894428655853`*^9, 3.6206895001649847`*^9}, {3.712874924071595*^9, 
  3.712874924775662*^9}},ExpressionUUID->"38d3542e-9d28-4588-8499-\
e2936d3ec9ff"],

Cell[CellGroupData[{

Cell["Input and output", "Subsection",
 CellChangeTimes->{{3.58505821613573*^9, 
  3.585058220583263*^9}},ExpressionUUID->"89cee4ae-2df2-475a-ba46-\
5250e654c551"],

Cell["The first line of your function should be:", "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
   3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
   3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
   3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
   3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
   3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
   3.585058510125984*^9}, 
   3.585058649814739*^9},ExpressionUUID->"480f1c61-eb08-42ba-9001-\
f596f789fb59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sitePosterior", "[", 
   RowBox[{
   "sequence_", ",", " ", "sitePrior_", ",", " ", "backgroundPrior_", ",", 
    " ", "siteProbs_", ",", " ", "backgroundProbs_"}], "]"}], " ", 
  ":="}]], "Input",
 CellChangeTimes->{{3.585058661642289*^9, 3.5850586616457167`*^9}, {
  3.585770947799818*^9, 3.585770949750482*^9}, {3.586084930070643*^9, 
  3.5860849385603456`*^9}, {3.586084996373622*^9, 3.586084996428955*^9}, {
  3.620687114410125*^9, 
  3.6206871964507093`*^9}},ExpressionUUID->"283e5158-ad9b-4efb-9b8d-\
ab7989ccd85b"],

Cell[TextData[{
 StyleBox["sequence",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " will be the list of bases observed in a draw, expressed in integers, with \
the mapping as described in siteSample:\nA <-> 1\nC <-> 2\nG <-> 3\nT <-> 4\n\
so a list of {1,3,2,4} would correspond to {\[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]T\
\[CloseCurlyDoubleQuote]}.  The length of ",
 StyleBox["sequence",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " must be the same as the length of ",
 StyleBox["siteProbs",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ".\n\n",
 StyleBox["Hint: ",
  FontWeight->"Bold"],
 "Since the nucleotides are encoded as the integers 1-4, you can use them as \
indices into the probability tables that are provided as input.\n\n",
 StyleBox["sitePrior",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["backgroundPrior",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " are numbers between 0 and 1, inclusive. \n",
 StyleBox["siteProbs",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["backgroundProbs",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " are vectors representing the probabilities of producing bases in a \
sequence, as described in ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 ".  A call will look like:"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfdTac/Xlra8cLTJKd4Fos8XB+0A03+K6syD6zTr2
WyA6YqYVwxUgzVFuyQ+iJcrMxEH0swk31b8AaWuXJQ4gepvYX1cQbePV6g2i
nzQ4B4LoaJPpwSD63F2NbSA6LKF+B4h27jt0A0QLcBy5CaIjhKxeg+jE/LLf
IPrYpXPMX4H0h4UrxUH02w9pciB6SoyRAoj2TD/N/Wr7K8fg2Eg+EH3thU40
9/dXjnMqloPpgt6WFS9/vnLcU30ITH8yubAGRC9zmrsWRLNEdO0G0RWWHEdA
tN/b8LMgesusB7dA9BfFi083rHzt+OuX+XsQDQCfzbdm
  
  "],ExpressionUUID->"2a954d62-707a-4f3c-a8b5-18859f9c07bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"Length", "[", 
   RowBox[{"{", 
    RowBox[{".1", ",", " ", ".4", ",", " ", ".4", ",", " ", ".1"}], "}"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7785962890242157`*^9, 3.778596304681731*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"78ef1136-70e7-4698-ac43-304a3264e1ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.7785962922690973`*^9, 3.778596305061496*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"6030b674-f04c-4716-a87b-310581c9a9a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"siteFreqs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{".1", ",", " ", ".4", ",", " ", ".4", ",", " ", ".1"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{".1", ",", " ", ".4", ",", " ", ".4", ",", " ", ".1"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{".8", ",", " ", ".1", ",", " ", ".1", ",", " ", "0"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sitePosterior", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "3", ",", " ", "1"}], "}"}], ",", " ", "0.35", ",",
    " ", "0.65", ",", " ", "siteFreqs", ",", " ", 
   RowBox[{"{", 
    RowBox[{"0.25", ",", " ", "0.25", ",", " ", "0.25", ",", " ", "0.25"}], 
    "}"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
   3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
   3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
   3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
   3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
   3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
   3.585058510125984*^9}, {3.585058649814739*^9, 3.585058779701096*^9}, {
   3.585058846463229*^9, 3.5850590053010178`*^9}, {3.58505905921691*^9, 
   3.5850591203470783`*^9}, 3.58852997558176*^9, {3.6206875802929373`*^9, 
   3.6206876365637836`*^9}, {3.620692571224628*^9, 3.620692580404777*^9}, {
   3.712842104497201*^9, 3.7128421332320623`*^9}, 3.7785965331166573`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"181229d7-bcdb-45a1-9f55-61ce3b000cec"],

Cell[BoxData["0.13265624999999998`"], "Output",
 CellChangeTimes->{{3.620692554645286*^9, 3.620692581763291*^9}, {
   3.778584826073069*^9, 3.778584844074904*^9}, {3.778584894159528*^9, 
   3.778584897782831*^9}, 3.778584986707231*^9, 3.778585760486219*^9, 
   3.778585988201743*^9, 3.778586022779161*^9, {3.7785869766227837`*^9, 
   3.778587000591633*^9}, 3.778587093245764*^9, 3.778596254900465*^9, 
   3.7785963744814157`*^9, 3.778596419982851*^9, {3.7785965184347057`*^9, 
   3.778596536162984*^9}, 3.778596569812611*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"d09dbab4-b5fa-4e3e-ae06-c2a04e03b196"]
}, Open  ]],

Cell["\<\
The return value should be a single number representing the posterior \
probability that the sequence we drew was from a site bound by a \
transcription factor.\
\>", "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
   3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
   3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
   3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
   3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
   3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
   3.585058510125984*^9}, {3.585058649814739*^9, 3.585058779701096*^9}, {
   3.585058846463229*^9, 3.5850590053010178`*^9}, {3.58505905921691*^9, 
   3.585059111051182*^9}, {3.585059145118655*^9, 3.5850592899911613`*^9}, 
   3.585771005051221*^9, 3.619183391377368*^9, {3.620687649090489*^9, 
   3.6206876880091476`*^9}},ExpressionUUID->"d9549077-837b-474d-a677-\
35dc19f6f9f7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.778586068004944*^9, 3.778586073267194*^9}, {
  3.7785862958890657`*^9, 
  3.7785862971664257`*^9}},ExpressionUUID->"8a471418-7195-42c7-a5e7-\
288a49c7db40"],

Cell[TextData[{
 "As in ",
 StyleBox["dicePosterior",
  FontWeight->"Bold"],
 ", you should:\n1) Work out the math for what you want to do first!  \
Seriously it\[CloseCurlyQuote]s so much easier that way.\n2) Make sure you \
account for cases where you have a site/backgroundPrior of 0, or you have a 0 \
probability for observing some base in the sequence\n3) Use exact math \
throughout, to avoid precision issues in the tests."
}], "Text",
 CellChangeTimes->{{3.620687702384645*^9, 3.620687724127934*^9}, {
  3.620687983987445*^9, 
  3.620688088622621*^9}},ExpressionUUID->"1ad482e1-e623-4309-9066-\
80671ff88589"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instructions and grading", "Subsection",
 CellChangeTimes->{{3.585771468289455*^9, 
  3.585771475912866*^9}},ExpressionUUID->"e088d8cd-dcb4-4cfa-86ca-\
b02298dbaa29"],

Cell["\<\
Please turn in your .m file containing the code and sufficient documentation \
to read and understand it.

The rubric for this is:

A. 1 point for turning in code that takes input of the right form and \
produces output of the right form between 0 and 1.

B. 1 point for turning in code that is correct when the input contains no \
zeros. 

C. 1 point for turning in code that passes all the tests distributed and is  \
fully correct, including the handling of all combinations of zero inputs. \
Just because your code passes all the provided unit tests does not guarantee \
that it is correct -- you need to think about what\[CloseCurlyQuote]s right.

D.  1 point for style (things such as capitalization and full, descriptive \
names, no global variables) and legibility, including indentation, line \
breaks, and comments. You must satisfy A and B to get this point.\
\>", "Text",
 CellChangeTimes->{{3.58499210831761*^9, 3.584992269479895*^9}, {
   3.584992305927824*^9, 3.584992605885792*^9}, {3.5849926396934137`*^9, 
   3.584992779654065*^9}, {3.585059307737156*^9, 3.585059353317692*^9}, {
   3.585059567260913*^9, 3.585059759166882*^9}, {3.5850598028309526`*^9, 
   3.585059837293536*^9}, {3.585069359494947*^9, 3.58506940083663*^9}, {
   3.585771078973572*^9, 3.5857710867632713`*^9}, {3.61918346516852*^9, 
   3.61918354376532*^9}, 3.7128421994387712`*^9, {3.712842237938456*^9, 
   3.712842255553563*^9}},ExpressionUUID->"46dc8dfa-8cd3-41f4-85df-\
1ec9d12f7e7c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 920},
WindowMargins->{{Automatic, 468}, {Automatic, 15}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 239, 4, 67, "Section",ExpressionUUID->"8fcf5dac-2259-4a7b-a3f7-f6963abfe94a"],
Cell[821, 28, 595, 21, 58, "Text",ExpressionUUID->"6aef085c-1a1a-4bc4-a7b1-7d3cfa0a8372"],
Cell[1419, 51, 1148, 18, 104, "Text",ExpressionUUID->"5ae5015d-4688-4baf-a771-85b99a4e54fd"],
Cell[2570, 71, 1124, 18, 104, "Text",ExpressionUUID->"38d3542e-9d28-4588-8499-e2936d3ec9ff"],
Cell[CellGroupData[{
Cell[3719, 93, 163, 3, 54, "Subsection",ExpressionUUID->"89cee4ae-2df2-475a-ba46-5250e654c551"],
Cell[3885, 98, 608, 9, 35, "Text",ExpressionUUID->"480f1c61-eb08-42ba-9001-f596f789fb59"],
Cell[4496, 109, 557, 12, 30, "Input",ExpressionUUID->"283e5158-ad9b-4efb-9b8d-ab7989ccd85b"],
Cell[5056, 123, 1899, 51, 311, "Text",ExpressionUUID->"2a954d62-707a-4f3c-a8b5-18859f9c07bc"],
Cell[CellGroupData[{
Cell[6980, 178, 330, 7, 30, "Input",ExpressionUUID->"78ef1136-70e7-4698-ac43-304a3264e1ce"],
Cell[7313, 187, 240, 4, 34, "Output",ExpressionUUID->"6030b674-f04c-4716-a87b-310581c9a9a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7590, 196, 1691, 33, 73, "Input",ExpressionUUID->"181229d7-bcdb-45a1-9f55-61ce3b000cec"],
Cell[9284, 231, 604, 8, 34, "Output",ExpressionUUID->"d09dbab4-b5fa-4e3e-ae06-c2a04e03b196"]
}, Open  ]],
Cell[9903, 242, 1003, 16, 58, "Text",ExpressionUUID->"d9549077-837b-474d-a677-35dc19f6f9f7"],
Cell[10909, 260, 205, 4, 30, "Input",ExpressionUUID->"8a471418-7195-42c7-a5e7-288a49c7db40"],
Cell[11117, 266, 618, 13, 127, "Text",ExpressionUUID->"1ad482e1-e623-4309-9066-80671ff88589"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11772, 284, 172, 3, 54, "Subsection",ExpressionUUID->"e088d8cd-dcb4-4cfa-86ca-b02298dbaa29"],
Cell[11947, 289, 1484, 29, 334, "Text",ExpressionUUID->"46dc8dfa-8cd3-41f4-85df-1ec9d12f7e7c"]
}, Open  ]]
}, Open  ]]
}
]
*)

